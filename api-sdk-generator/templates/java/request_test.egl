[%
import "./helper_functions.egl";
%]
[%=packageAndCopyright()%]

import org.junit.Test;
import static org.junit.Assert.*;

public class [%=name + testClassSuffix%] {
	
	@Test
	public void testSerializeValid() {
	[% for (field in fields) {%]
		[%=field.type.name%] [%=field.name%] = [%=field.testValue%];
	[%}%]
		[%=name%] request = [%=name%].builder()
[%		for (field in fields) {%]
			.[%=field.name%]([%=field.name%])
		[%}%]
			.build();
		
		String json = request.toJson();
	[% for (field in fields) {
			if (field.json.isDefined()) {%]
		assertTrue(json.contains("\"[%=field.json%]\":\""+[%=field.name%]+"\""));
	[%}}%]
	}
	
	@Test
	public void triggerJsonProcessingException() {
		class SelfRefrencing extends [%=name%] {
			@JsonProperty("self") SelfRefrencing self = this;

			SelfRefrencing(Builder builder) {
				super(builder);
			}
		}
		assertThrows(VonageUnexpectedException.class, () -> new SelfRefrencing([%=name%].builder()).toJson());
	}
}